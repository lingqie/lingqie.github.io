---
layout: post
categories: 目录2
title: title3
date:   2016-12-02 10:40:45 +000
tags:
 java
 learning
---
You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

{{page.title}}

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:

{% highlight java %}
	@Override
	// 计算每种牌的个数。
	public int[] analyse(int[] hai) {

		int[] n = n_zero.clone();

		for (int i : hai) {
			n[i]++;
		}
		return n;
	}

	@Override
	public List<Integer[][]> agari(int[] n) {// 输入对应统计数
		List<Integer[][]> ret = new ArrayList<Integer[][]>();
		for (int i = 0; i < 34; i++) {
			for (int kotsu_first = 0; kotsu_first < 2; kotsu_first++) {
				Integer[] janto = new Integer[1];
				ArrayList<Integer> kotsu = new ArrayList<Integer>();
				ArrayList<Integer> shuntsu = new ArrayList<Integer>();

				int[] t = n.clone();// tonngji shu
				if (t[i] >= 2) { // t[0]>=2 man1>2
					// 雀頭をはじめに取り出す
					t[i] -= 2;
					janto[0] = i;

					if (kotsu_first == 0) {
						// 刻子を先に取り出す
						for (int j = 0; j < 34; j++) {
							if (t[j] >= 3) {
								t[j] -= 3;
								kotsu.add(j);
							}
						}
						// 順子を後に取り出す
						for (int a = 0; a < 3; a++) {
							for (int b = 0; b < 7;) {
								if (t[9 * a + b] >= 1 && t[9 * a + b + 1] >= 1 && t[9 * a + b + 2] >= 1) {
									t[9 * a + b]--;
									t[9 * a + b + 1]--;
									t[9 * a + b + 2]--;
									shuntsu.add(9 * a + b);
								} else {
									b++;
								}
							}
						}
					} else {
						// 順子を先に取り出す
						for (int a = 0; a < 3; a++) {
							for (int b = 0; b < 7;) {
								if (t[9 * a + b] >= 1 && t[9 * a + b + 1] >= 1 && t[9 * a + b + 2] >= 1) {
									t[9 * a + b]--;
									t[9 * a + b + 1]--;
									t[9 * a + b + 2]--;
									shuntsu.add(9 * a + b);
								} else {
									b++;
								}
							}
						}
						// 刻子を後に取り出す
						for (int j = 0; j < 34; j++) {
							if (t[j] >= 3) {
								t[j] -= 3;
								kotsu.add(j);
							}
						}
					}

					// 和了の形か調べる
					if (Arrays.equals(t, n_zero)) {// 所有牌用光了
						ret.add(new Integer[][] { janto, kotsu.toArray(new Integer[0]),
								shuntsu.toArray(new Integer[0]) });
					}
				}
			}
		}
		return ret;
	}
{% endhighlight %}

Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: http://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
